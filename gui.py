from PyQt6.QtWidgets import (QApplication, QMainWindow, QListWidget, QTextEdit, QHBoxLayout, QVBoxLayout, QLabel,
                             QWidget, QPushButton, QDialog, QLineEdit, QMessageBox, QMenu, QInputDialog,
                             QScrollArea, QComboBox, QFileDialog, QDateEdit, QTableWidgetItem, QTableWidget,
                             QCheckBox, QDateTimeEdit, QDialogButtonBox, QGridLayout, QFrame)

from PyQt6.QtCore import Qt, QDate, QByteArray, QDateTime
from PyQt6.QtGui import QPixmap, QFont
from db import UsersDB
import sys
import re


class LoginDialog(QDialog):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–í—Ö—ñ–¥")
        self.resize(250, 150)
        self.db = UsersDB()
        self.selected_user = None
        self.attempts = 0

        self.username_label = QLabel("–õ–æ–≥—ñ–Ω:")
        self.username_combo = QComboBox()
        self.username_combo.addItems(self.db.get_all_logins())
        # self.username_input = QLineEdit()


        self.password_label = QLabel("–ü–∞—Ä–æ–ª—å:")
        self.password_widget, self.password_input, self.toggle_password_button = create_password_widget()

        self.login_button = QPushButton("–£–≤—ñ–π—Ç–∏")
        self.login_button.clicked.connect(self.check_login)

        self.create_user = QPushButton("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        self.create_user.clicked.connect(self.create_new_user)

        self.create_user.setStyleSheet("""
            QPushButton {
                background-color: transparent;  /* –ü—Ä–æ–∑–æ—Ä–∏–π —Ñ–æ–Ω */
                color: #2271bf;  /* –°–∏–Ω—ñ–π —Ç–µ–∫—Å—Ç */
                border: none;  /* –ë–µ–∑ —Ä–∞–º–∫–∏ */
            }
            QPushButton:hover {
                text-decoration: underline;  /* –ü—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
                color: #3399FF;
            }
        """)

        layout = QVBoxLayout()
        layout.addWidget(self.username_label)
        layout.addWidget(self.username_combo)
        # layout.addWidget(self.username_input)
        layout.addWidget(self.password_label)
        layout.addWidget(self.password_widget)
        layout.addWidget(self.login_button)
        layout.addWidget(self.create_user)

        self.setLayout(layout)

    def check_login(self):
        # username = self.username_input.text()
        username = self.username_combo.currentText()
        password = self.password_input.text()

        user = self.db.get_user(username, password)
        if user:
            self.selected_user = username
            self.accept()
        else:
            self.attempts += 1
            if self.attempts >= 3:
                QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", "–í–∏ –≤–∏—á–µ—Ä–ø–∞–ª–∏ –≤—Å—ñ —Å–ø—Ä–æ–±–∏")
                self.reject()
            else:
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å, —É –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—è "
                                                     f"{3 - self.attempts} —Å–ø—Ä–æ–±")

    def create_new_user(self):
        dialog = CreateNewUserDialog(self.db)
        if dialog.exec():
            self.username_combo.clear()
            self.username_combo.addItems(self.db.get_all_logins())
        else:
            QMessageBox.information(self, "–£–≤–∞–≥–∞", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ")

class CreateNewUserDialog(QDialog):
    def __init__(self, db):
        super().__init__()
        self.db = db

        self.setWindowTitle("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")

        self.username_label = QLabel("–õ–æ–≥—ñ–Ω:")
        self.username_input = QLineEdit()

        self.password_label = QLabel("–ü–∞—Ä–æ–ª—å:")
        self.password_widget, self.password_input, self.toggle_password_button = create_password_widget()

        self.create_button = QPushButton("–°—Ç–≤–æ—Ä–∏—Ç–∏")
        self.create_button.clicked.connect(self.create_user)

        layout = QVBoxLayout()
        layout.addWidget(self.username_label)
        layout.addWidget(self.username_input)
        layout.addWidget(self.password_label)
        layout.addWidget(self.password_widget)
        layout.addWidget(self.create_button)

        self.setLayout(layout)

    def create_user(self):
        # 6. –ù–∞—è–≤–Ω—ñ—Å—Ç—å –ª–∞—Ç–∏–Ω—Å—å–∫–∏—Ö –±—É–∫–≤, —Å–∏–º–≤–æ–ª—ñ–≤ –∫–∏—Ä–∏–ª–∏—Ü—ñ —Ç–∞ —Ü–∏—Ñ—Ä.
        username = self.username_input.text()
        password = self.password_input.text()

        if self.db.check_login(username):
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ –ª–æ–≥—ñ–Ω–æ–º {username} –≤–∂–µ —ñ—Å–Ω—É—î")
            return

        if not username or not password:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–õ–æ–≥—ñ–Ω —Ç–∞ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –ø—É—Å—Ç–∏–º–∏")
            return

        if not checking_password(password):
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –ª–∞—Ç–∏–Ω—Å—å–∫—ñ –±—É–∫–≤–∏, –∫–∏—Ä–∏–ª–∏—Ü—é —Ç–∞ —Ü–∏—Ñ—Ä–∏")
            return

        self.db.create_user(username, password)
        QMessageBox.information(self, "–£—Å–ø—ñ—Ö", f"–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á {username} —Å—Ç–≤–æ—Ä–µ–Ω–∏–π")
        self.accept()


class MainApp(QMainWindow):
    def __init__(self, username, db):
        super().__init__()
        self.resize(300, 200)
        self.db = db
        self.username = username

        role = self.db.get_user_role(username)
        if role == "admin":
            self.setWindowTitle("–ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ (–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä)")
        else:
            self.setWindowTitle("–ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ")

        self.change_password = QPushButton("–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å")
        self.change_password.clicked.connect(self.password_change)

        central_widget = QWidget()
        self.setCentralWidget(central_widget)

        layout = QVBoxLayout()
        central_widget.setLayout(layout)
        layout.addWidget(self.change_password)

    def password_change(self):
        dialog = ChangePasswordDialog(self.username, self.db)
        dialog.exec()


class ChangePasswordDialog(QDialog):
    def __init__(self, username, db):
        super().__init__()
        self.resize(300, 200)
        self.db = db
        self.username = username

        self.setWindowTitle(f"–ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è {username}")

        self.password_label = QLabel("–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å:")
        self.password_widget, self.password_input, self.toggle_password_button = create_password_widget()

        self.new_password_label = QLabel("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:")
        self.new_password_widget, self.new_password_input, self.toggle_new_password_button = create_password_widget()

        self.repeat_new_password_label = QLabel("–ü–æ–≤—Ç–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:")
        self.repeat_new_password_widget, self.repeat_new_password_input, self.toggle_repeat_new_password_button = create_password_widget()

        self.change_button = QPushButton("–ó–º—ñ–Ω–∏—Ç–∏")
        self.change_button.clicked.connect(self.change_password)

        layout = QVBoxLayout()
        layout.addWidget(self.password_label)
        layout.addWidget(self.password_widget)
        layout.addWidget(self.new_password_label)
        layout.addWidget(self.new_password_widget)
        layout.addWidget(self.repeat_new_password_label)
        layout.addWidget(self.repeat_new_password_widget)
        layout.addWidget(self.change_button)

        self.setLayout(layout)

    def change_password(self):
        old_password = self.password_input.text()
        new_password = self.new_password_input.text()
        repeat_new_password = self.repeat_new_password_input.text()

        if not self.db.get_user(self.username, old_password):
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ–≤—ñ—Ä–Ω–∏–π —Å—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å")
            return

        if new_password != repeat_new_password:
            QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—î")
            return

        self.db.change_password(self.username, new_password)
        QMessageBox.information(self, "–£—Å–ø—ñ—Ö", "–ü–∞—Ä–æ–ª—å –∑–º—ñ–Ω–µ–Ω–æ")
        self.accept()


def checking_password(password):
    has_latin = re.search(r'[A-Za-z]', password) is not None
    has_cyrillic = re.search(r'[–ê-–Ø–∞-—è–Å—ë–á—ó–Ü—ñ–Ñ—î“ê“ë]', password) is not None
    has_digit = re.search(r'\d', password) is not None

    return has_latin and has_cyrillic and has_digit

def toggle_password_visibility(password_input: QLineEdit, toggle_password_button: QPushButton):
    if toggle_password_button.isChecked():
        password_input.setEchoMode(QLineEdit.EchoMode.Normal)
        toggle_password_button.setText("üôà")
    else:
        password_input.setEchoMode(QLineEdit.EchoMode.Password)
        toggle_password_button.setText("üëÅÔ∏è")

def create_password_widget():
    line_edit = QLineEdit()
    line_edit.setEchoMode(QLineEdit.EchoMode.Password)

    button = QPushButton("üëÅÔ∏è")
    button.setCheckable(True)
    button.setFixedSize(30, 25)
    button.clicked.connect(lambda: toggle_password_visibility(line_edit, button))

    widget = QWidget()
    layout = QHBoxLayout(widget)
    layout.setContentsMargins(0, 0, 0, 0)
    layout.addWidget(line_edit)
    layout.addWidget(button)

    return widget, line_edit, button



if __name__ == "__main__":
    app = QApplication(sys.argv)

    login_dialog = LoginDialog()
    if login_dialog.exec() == QDialog.DialogCode.Accepted:
        main_window = MainApp(login_dialog.selected_user, login_dialog.db)
        main_window.show()
        sys.exit(app.exec())